{"version":3,"sources":["components/Hero.js","components/NavBar.js","components/About.js","components/Skills.js","components/ProjectCard.js","components/ProjectsContainer.js","components/ContactContainer.js","components/LetsTalk.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Hero","class","NavBar","href","About","Skills","ProjectCard","ProjectsContainer","ContactContainer","for","type","name","id","placeholder","LetsTalk","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uMAiBeA,G,KAfF,WACX,OACE,yBAAKC,MAAM,kBACT,yBAAKA,MAAM,UACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,aACT,0BAAMA,MAAM,YAAZ,WACA,wBAAIA,MAAM,WAAV,oBACA,0BAAMA,MAAM,YAAZ,uBAEF,yBAAKA,MAAM,aCGFC,EAbA,WACb,OACE,gCACE,yBAAKD,MAAM,QAAO,uBAAGE,KAAK,KAAR,OAClB,yBAAKF,MAAM,aACT,uBAAGE,KAAK,KAAR,QACA,uBAAGA,KAAK,KAAR,SACA,uBAAGA,KAAK,KAAR,cCeOC,EAtBD,WACZ,OACE,yBAAKH,MAAM,aACT,yBAAKA,MAAM,cACT,wCACA,6LAKA,gNAII,0BAAMA,MAAM,gBAAZ,6BAJJ,MAOF,yBAAKA,MAAM,YCoBFI,EArCA,WACb,OACE,yBAAKJ,MAAM,aACT,yBAAKA,MAAM,cACT,+CACA,yBAAKA,MAAM,cACT,yBAAKA,MAAM,aACT,4BACE,oCACA,mCACA,0CACA,oCACA,wCACA,qCACA,4CACA,yCAGJ,yBAAKA,MAAM,aACT,4BACE,sCACA,uCACA,mCACA,sCACA,mCACA,iCACA,wCAMR,yBAAKA,MAAM,YCjBFK,EAfK,WAClB,OACE,yBAAKL,MAAM,gBACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,gBACT,uBAAGE,KAAK,KAAR,QACA,uBAAGA,KAAK,KAAR,UAGJ,8CACA,6DCQSI,EAjBW,WACxB,OACE,yBAAKN,MAAM,aACT,yBAAKA,MAAM,oBACT,2DACA,yBAAKA,MAAM,qBACT,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGJ,yBAAKA,MAAM,YCWFO,EAxBU,WACvB,OACE,yBAAKP,MAAM,aACT,yBAAKA,MAAM,gBACT,0CACA,8BACE,2BAAOQ,IAAI,SAAX,UAEE,2BAAOC,KAAK,OAAOC,KAAK,QAAQC,GAAG,QAAQC,YAAY,2BAEzD,2BAAOJ,IAAI,WAAX,WAEE,2BAAOC,KAAK,OAAOC,KAAK,UAAUC,GAAG,UAAUC,YAAY,6BAE7D,2BAAOJ,IAAI,OAAX,oBAEE,2BAAOC,KAAK,WAAWC,KAAK,MAAMC,GAAG,MAAMC,YAAY,6BCZpDC,EAJE,kBACb,yBAAKb,MAAM,UAAS,4CCOTc,EARA,WACb,OACE,yBAAKd,MAAM,UACT,2DAAgC,uBAAGE,KAAK,KAAR,uBCoBvBa,EAfH,WACV,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCRcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ed91782f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <div class=\"container hero\">\r\n      <div class=\"green\"></div>\r\n      <div class=\"orange\"></div>\r\n      <div class=\"hero-text\">\r\n        <span class=\"hi small\">Hi! I'm</span>\r\n        <h1 class=\"my-name\">Martin Wiytiszen</h1>\r\n        <span class=\"sd small\">Software Developer</span>\r\n      </div>\r\n      <div class=\"arrow\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <navbar>\r\n      <div class=\"logo\"><a href=\"#\">MW</a></div>\r\n      <div class=\"nav-links\">\r\n        <a href=\"#\">Home</a>\r\n        <a href=\"#\">About</a>\r\n        <a href=\"#\">Project</a>\r\n      </div>\r\n    </navbar>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"about-text\">\r\n        <h3>About Me</h3>\r\n        <p>\r\n          Hi, I am a self-taught developer, based in Mar del Plata, Buenos\r\n          Aires, Argentina with a focus on web development. I am currently\r\n          studying Programming at UTN.\r\n          </p>\r\n        <p>\r\n          At the time of coding, I always try to maintain good practices and my\r\n          code clean. In addition to the logic behind the programming, I like\r\n          user experience and enjoy a good design.\r\n            <span class=\"check-skills\">Check out my skills below</span>.\r\n          </p>\r\n      </div>\r\n      <div class=\"arrow\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"skill-tech\">\r\n        <h3>Skills and Tech</h3>\r\n        <div class=\"skill-list\">\r\n          <div class=\"col-skill\">\r\n            <ul>\r\n              <li>HTML</li>\r\n              <li>CSS</li>\r\n              <li>Javascript</li>\r\n              <li>ES6+</li>\r\n              <li>React.js</li>\r\n              <li>Redux</li>\r\n              <li>React-Native</li>\r\n              <li>Angular</li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"col-skill\">\r\n            <ul>\r\n              <li>Vue.js</li>\r\n              <li>Node.js</li>\r\n              <li>Git</li>\r\n              <li>Github</li>\r\n              <li>OOP</li>\r\n              <li>C</li>\r\n              <li>Java</li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"arrow\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React from 'react'\r\n\r\nconst ProjectCard = () => {\r\n  return (\r\n    <div class=\"project-card\">\r\n      <div class=\"project\">\r\n        <div class=\"project-view\">\r\n          <a href=\"#\">live</a>\r\n          <a href=\"#\">code</a>\r\n        </div>\r\n      </div>\r\n      <h4>Random project</h4>\r\n      <p>stack: html, css , javascrip</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React from 'react'\r\nimport ProjectCard from './ProjectCard'\r\n\r\nconst ProjectsContainer = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"projects-section\">\r\n        <h3>Take a look to my projects!</h3>\r\n        <div class=\"project-container\">\r\n          <ProjectCard/>\r\n          <ProjectCard/>\r\n          <ProjectCard/>\r\n          <ProjectCard/>\r\n        </div>\r\n      </div>\r\n      <div class=\"arrow\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectsContainer\r\n","import React from 'react'\r\n\r\nconst ContactContainer = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"form-section\">\r\n        <h3>Lets talk!</h3>\r\n        <form>\r\n          <label for=\"email\">\r\n            E-mail:\r\n            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"youremail@example.com\"/>\r\n          </label>\r\n          <label for=\"subject\">\r\n            Subject:\r\n            <input type=\"text\" name=\"subject\" id=\"subject\" placeholder=\"Let's Work together! ;)\"/>\r\n          </label>\r\n          <label for=\"msg\">\r\n            Tell me about it:\r\n            <input type=\"textarea\" name=\"msg\" id=\"msg\" placeholder=\"what's going on?...\" />\r\n          </label>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactContainer\r\n","import React from 'react'\r\n\r\nconst LetsTalk = () =>  (\r\n    <div class=\"bubble\"><h2>Lets talk!</h2></div>\r\n  )\r\n\r\nexport default LetsTalk\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div class=\"footer\">\r\n      <p>Make with coffee and love by <a href=\"#\">Martin Wiytiszen</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport Hero from './components/Hero'\nimport Navbar from './components/NavBar'\nimport About from './components/About'\nimport Skills from './components/Skills'\nimport ProjectsContainer from './components/ProjectsContainer'\nimport ContactContainer from './components/ContactContainer'\nimport LetsTalk from './components/LetsTalk'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <>\n      <Hero/>\n      <LetsTalk/>\n      <Navbar/>\n      <About/>\n      <Skills/>\n      <ProjectsContainer/>\n      <ContactContainer/>\n      <Footer/>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}